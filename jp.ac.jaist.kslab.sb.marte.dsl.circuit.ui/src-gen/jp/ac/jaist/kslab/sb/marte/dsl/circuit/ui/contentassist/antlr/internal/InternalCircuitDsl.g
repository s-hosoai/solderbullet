/*
* generated by Xtext
*/
grammar InternalCircuitDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package jp.ac.jaist.kslab.sb.marte.dsl.circuit.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package jp.ac.jaist.kslab.sb.marte.dsl.circuit.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import jp.ac.jaist.kslab.sb.marte.dsl.circuit.services.CircuitDslGrammarAccess;

}

@parser::members {
 
 	private CircuitDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CircuitDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleHwCircuitDiagram
entryRuleHwCircuitDiagram 
:
{ before(grammarAccess.getHwCircuitDiagramRule()); }
	 ruleHwCircuitDiagram
{ after(grammarAccess.getHwCircuitDiagramRule()); } 
	 EOF 
;

// Rule HwCircuitDiagram
ruleHwCircuitDiagram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHwCircuitDiagramAccess().getGroup()); }
(rule__HwCircuitDiagram__Group__0)
{ after(grammarAccess.getHwCircuitDiagramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHwComponents
entryRuleHwComponents 
:
{ before(grammarAccess.getHwComponentsRule()); }
	 ruleHwComponents
{ after(grammarAccess.getHwComponentsRule()); } 
	 EOF 
;

// Rule HwComponents
ruleHwComponents
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHwComponentsAccess().getGroup()); }
(rule__HwComponents__Group__0)
{ after(grammarAccess.getHwComponentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHwPackagePin
entryRuleHwPackagePin 
:
{ before(grammarAccess.getHwPackagePinRule()); }
	 ruleHwPackagePin
{ after(grammarAccess.getHwPackagePinRule()); } 
	 EOF 
;

// Rule HwPackagePin
ruleHwPackagePin
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHwPackagePinAccess().getGroup()); }
(rule__HwPackagePin__Group__0)
{ after(grammarAccess.getHwPackagePinAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHwWire
entryRuleHwWire 
:
{ before(grammarAccess.getHwWireRule()); }
	 ruleHwWire
{ after(grammarAccess.getHwWireRule()); } 
	 EOF 
;

// Rule HwWire
ruleHwWire
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHwWireAccess().getNameAssignment()); }
(rule__HwWire__NameAssignment)
{ after(grammarAccess.getHwWireAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HwCircuitDiagram__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwCircuitDiagram__Group__0__Impl
	rule__HwCircuitDiagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HwCircuitDiagram__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwCircuitDiagramAccess().getHwCircuitDiagramAction_0()); }
(

)
{ after(grammarAccess.getHwCircuitDiagramAccess().getHwCircuitDiagramAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwCircuitDiagram__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwCircuitDiagram__Group__1__Impl
	rule__HwCircuitDiagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HwCircuitDiagram__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwCircuitDiagramAccess().getNetKeyword_1()); }

	'net {' 

{ after(grammarAccess.getHwCircuitDiagramAccess().getNetKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwCircuitDiagram__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwCircuitDiagram__Group__2__Impl
	rule__HwCircuitDiagram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HwCircuitDiagram__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwCircuitDiagramAccess().getWiresAssignment_2()); }
(rule__HwCircuitDiagram__WiresAssignment_2)
{ after(grammarAccess.getHwCircuitDiagramAccess().getWiresAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwCircuitDiagram__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwCircuitDiagram__Group__3__Impl
	rule__HwCircuitDiagram__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HwCircuitDiagram__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwCircuitDiagramAccess().getGroup_3()); }
(rule__HwCircuitDiagram__Group_3__0)*
{ after(grammarAccess.getHwCircuitDiagramAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwCircuitDiagram__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwCircuitDiagram__Group__4__Impl
	rule__HwCircuitDiagram__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HwCircuitDiagram__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwCircuitDiagramAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getHwCircuitDiagramAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwCircuitDiagram__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwCircuitDiagram__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HwCircuitDiagram__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwCircuitDiagramAccess().getComponentsAssignment_5()); }
(rule__HwCircuitDiagram__ComponentsAssignment_5)*
{ after(grammarAccess.getHwCircuitDiagramAccess().getComponentsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__HwCircuitDiagram__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwCircuitDiagram__Group_3__0__Impl
	rule__HwCircuitDiagram__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HwCircuitDiagram__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwCircuitDiagramAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getHwCircuitDiagramAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwCircuitDiagram__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwCircuitDiagram__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HwCircuitDiagram__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwCircuitDiagramAccess().getWiresAssignment_3_1()); }
(rule__HwCircuitDiagram__WiresAssignment_3_1)
{ after(grammarAccess.getHwCircuitDiagramAccess().getWiresAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HwComponents__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwComponents__Group__0__Impl
	rule__HwComponents__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HwComponents__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwComponentsAccess().getComponentKeyword_0()); }

	'component' 

{ after(grammarAccess.getHwComponentsAccess().getComponentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwComponents__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwComponents__Group__1__Impl
	rule__HwComponents__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HwComponents__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwComponentsAccess().getNameAssignment_1()); }
(rule__HwComponents__NameAssignment_1)
{ after(grammarAccess.getHwComponentsAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwComponents__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwComponents__Group__2__Impl
	rule__HwComponents__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HwComponents__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwComponentsAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getHwComponentsAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwComponents__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwComponents__Group__3__Impl
	rule__HwComponents__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HwComponents__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwComponentsAccess().getPinsAssignment_3()); }
(rule__HwComponents__PinsAssignment_3)
{ after(grammarAccess.getHwComponentsAccess().getPinsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwComponents__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwComponents__Group__4__Impl
	rule__HwComponents__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HwComponents__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwComponentsAccess().getGroup_4()); }
(rule__HwComponents__Group_4__0)*
{ after(grammarAccess.getHwComponentsAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwComponents__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwComponents__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HwComponents__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwComponentsAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getHwComponentsAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__HwComponents__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwComponents__Group_4__0__Impl
	rule__HwComponents__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HwComponents__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwComponentsAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getHwComponentsAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwComponents__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwComponents__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HwComponents__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwComponentsAccess().getPinsAssignment_4_1()); }
(rule__HwComponents__PinsAssignment_4_1)
{ after(grammarAccess.getHwComponentsAccess().getPinsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HwPackagePin__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwPackagePin__Group__0__Impl
	rule__HwPackagePin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HwPackagePin__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwPackagePinAccess().getNameAssignment_0()); }
(rule__HwPackagePin__NameAssignment_0)
{ after(grammarAccess.getHwPackagePinAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwPackagePin__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwPackagePin__Group__1__Impl
	rule__HwPackagePin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HwPackagePin__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwPackagePinAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getHwPackagePinAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HwPackagePin__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HwPackagePin__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HwPackagePin__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwPackagePinAccess().getWireAssignment_2()); }
(rule__HwPackagePin__WireAssignment_2)
{ after(grammarAccess.getHwPackagePinAccess().getWireAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__HwCircuitDiagram__WiresAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwCircuitDiagramAccess().getWiresHwWireParserRuleCall_2_0()); }
	ruleHwWire{ after(grammarAccess.getHwCircuitDiagramAccess().getWiresHwWireParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HwCircuitDiagram__WiresAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwCircuitDiagramAccess().getWiresHwWireParserRuleCall_3_1_0()); }
	ruleHwWire{ after(grammarAccess.getHwCircuitDiagramAccess().getWiresHwWireParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HwCircuitDiagram__ComponentsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwCircuitDiagramAccess().getComponentsHwComponentsParserRuleCall_5_0()); }
	ruleHwComponents{ after(grammarAccess.getHwCircuitDiagramAccess().getComponentsHwComponentsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HwComponents__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwComponentsAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getHwComponentsAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HwComponents__PinsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwComponentsAccess().getPinsHwPackagePinParserRuleCall_3_0()); }
	ruleHwPackagePin{ after(grammarAccess.getHwComponentsAccess().getPinsHwPackagePinParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HwComponents__PinsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwComponentsAccess().getPinsHwPackagePinParserRuleCall_4_1_0()); }
	ruleHwPackagePin{ after(grammarAccess.getHwComponentsAccess().getPinsHwPackagePinParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HwPackagePin__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwPackagePinAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getHwPackagePinAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HwPackagePin__WireAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwPackagePinAccess().getWireHwWireCrossReference_2_0()); }
(
{ before(grammarAccess.getHwPackagePinAccess().getWireHwWireIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getHwPackagePinAccess().getWireHwWireIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getHwPackagePinAccess().getWireHwWireCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HwWire__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHwWireAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getHwWireAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


