/*
* generated by Xtext
*/
grammar InternalSpecDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package jp.ac.jaist.kslab.sb.marte.spec.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package jp.ac.jaist.kslab.sb.marte.spec.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import jp.ac.jaist.kslab.sb.marte.spec.services.SpecDslGrammarAccess;

}

@parser::members {

 	private SpecDslGrammarAccess grammarAccess;
 	
    public InternalSpecDslParser(TokenStream input, SpecDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected SpecDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getModelAccess().getDatasheetParserRuleCall_0()); 
    }
    this_Datasheet_0=ruleDatasheet
    { 
        $current = $this_Datasheet_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getModelAccess().getDslProtocolParserRuleCall_1()); 
    }
    this_DslProtocol_1=ruleDslProtocol
    { 
        $current = $this_DslProtocol_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDatasheet
entryRuleDatasheet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatasheetRule()); }
	 iv_ruleDatasheet=ruleDatasheet 
	 { $current=$iv_ruleDatasheet.current; } 
	 EOF 
;

// Rule Datasheet
ruleDatasheet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='revision' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDatasheetAccess().getRevisionKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDatasheetAccess().getRevisionPackageNameParserRuleCall_0_1_0()); 
	    }
		lv_revision_1_0=rulePackageName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatasheetRule());
	        }
       		set(
       			$current, 
       			"revision",
        		lv_revision_1_0, 
        		"PackageName");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_2='datasheet' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDatasheetAccess().getDatasheetKeyword_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getDatasheetAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatasheetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDatasheetAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDatasheetAccess().getImportsImportParserRuleCall_4_0()); 
	    }
		lv_imports_5_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatasheetRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_5_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDatasheetAccess().getComponentsDslComponentParserRuleCall_5_0()); 
	    }
		lv_components_6_0=ruleDslComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatasheetRule());
	        }
       		add(
       			$current, 
       			"components",
        		lv_components_6_0, 
        		"DslComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDatasheetAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDslProtocol
entryRuleDslProtocol returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslProtocolRule()); }
	 iv_ruleDslProtocol=ruleDslProtocol 
	 { $current=$iv_ruleDslProtocol.current; } 
	 EOF 
;

// Rule DslProtocol
ruleDslProtocol returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='protocol' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDslProtocolAccess().getProtocolKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslProtocolAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslProtocolRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDslProtocolAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslProtocolAccess().getOperationsDslOperationParserRuleCall_3_0()); 
	    }
		lv_operations_3_0=ruleDslOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslProtocolRule());
	        }
       		add(
       			$current, 
       			"operations",
        		lv_operations_3_0, 
        		"DslOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDslProtocolAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleDslOperation
entryRuleDslOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslOperationRule()); }
	 iv_ruleDslOperation=ruleDslOperation 
	 { $current=$iv_ruleDslOperation.current; } 
	 EOF 
;

// Rule DslOperation
ruleDslOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDslOperationAccess().getTypeDslTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleDslType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslOperationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"DslType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDslOperationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslOperationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDslOperationAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDslOperationAccess().getParamTypeDslTypeParserRuleCall_3_0_0()); 
	    }
		lv_paramType_3_0=ruleDslType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslOperationRule());
	        }
       		add(
       			$current, 
       			"paramType",
        		lv_paramType_3_0, 
        		"DslType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_paramname_4_0=RULE_ID
		{
			newLeafNode(lv_paramname_4_0, grammarAccess.getDslOperationAccess().getParamnameIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslOperationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"paramname",
        		lv_paramname_4_0, 
        		"ID");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDslOperationAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslOperationAccess().getParamTypeDslTypeParserRuleCall_3_2_1_0()); 
	    }
		lv_paramType_6_0=ruleDslType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslOperationRule());
	        }
       		add(
       			$current, 
       			"paramType",
        		lv_paramType_6_0, 
        		"DslType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_paramname_7_0=RULE_ID
		{
			newLeafNode(lv_paramname_7_0, grammarAccess.getDslOperationAccess().getParamnameIDTerminalRuleCall_3_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslOperationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"paramname",
        		lv_paramname_7_0, 
        		"ID");
	    }

)
))*)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDslOperationAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleDslComponent
entryRuleDslComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslComponentRule()); }
	 iv_ruleDslComponent=ruleDslComponent 
	 { $current=$iv_ruleDslComponent.current; } 
	 EOF 
;

// Rule DslComponent
ruleDslComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDslComponentAccess().getDslMcuParserRuleCall_0()); 
    }
    this_DslMcu_0=ruleDslMcu
    { 
        $current = $this_DslMcu_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDslComponentAccess().getDslDeviceParserRuleCall_1()); 
    }
    this_DslDevice_1=ruleDslDevice
    { 
        $current = $this_DslDevice_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDslMcu
entryRuleDslMcu returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslMcuRule()); }
	 iv_ruleDslMcu=ruleDslMcu 
	 { $current=$iv_ruleDslMcu.current; } 
	 EOF 
;

// Rule DslMcu
ruleDslMcu returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mcu' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDslMcuAccess().getMcuKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDslMcuAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslMcuRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDslMcuAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='pins {' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDslMcuAccess().getPinsKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslMcuAccess().getPinsDslPinParserRuleCall_4_0()); 
	    }
		lv_pins_4_0=ruleDslPin		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslMcuRule());
	        }
       		add(
       			$current, 
       			"pins",
        		lv_pins_4_0, 
        		"DslPin");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDslMcuAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslMcuAccess().getPinsDslPinParserRuleCall_5_1_0()); 
	    }
		lv_pins_6_0=ruleDslPin		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslMcuRule());
	        }
       		add(
       			$current, 
       			"pins",
        		lv_pins_6_0, 
        		"DslPin");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDslMcuAccess().getRightCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslMcuAccess().getPortsDslPortParserRuleCall_7_0()); 
	    }
		lv_ports_8_0=ruleDslPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslMcuRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_8_0, 
        		"DslPort");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDslMcuAccess().getPeripheralsDslPeripheralParserRuleCall_8_0()); 
	    }
		lv_peripherals_9_0=ruleDslPeripheral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslMcuRule());
	        }
       		add(
       			$current, 
       			"peripherals",
        		lv_peripherals_9_0, 
        		"DslPeripheral");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_10='sfrs {' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDslMcuAccess().getSfrsKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslMcuAccess().getSfrDslRegisterParserRuleCall_9_1_0()); 
	    }
		lv_sfr_11_0=ruleDslRegister		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslMcuRule());
	        }
       		add(
       			$current, 
       			"sfr",
        		lv_sfr_11_0, 
        		"DslRegister");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDslMcuAccess().getCommaKeyword_9_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslMcuAccess().getSfrDslRegisterParserRuleCall_9_2_1_0()); 
	    }
		lv_sfr_13_0=ruleDslRegister		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslMcuRule());
	        }
       		add(
       			$current, 
       			"sfr",
        		lv_sfr_13_0, 
        		"DslRegister");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDslMcuAccess().getRightCurlyBracketKeyword_9_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDslMcuAccess().getPackagesDslPackageParserRuleCall_10_0()); 
	    }
		lv_packages_15_0=ruleDslPackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslMcuRule());
	        }
       		add(
       			$current, 
       			"packages",
        		lv_packages_15_0, 
        		"DslPackage");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDslMcuAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleDslDevice
entryRuleDslDevice returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslDeviceRule()); }
	 iv_ruleDslDevice=ruleDslDevice 
	 { $current=$iv_ruleDslDevice.current; } 
	 EOF 
;

// Rule DslDevice
ruleDslDevice returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='device' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDslDeviceAccess().getDeviceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDslDeviceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslDeviceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDslDeviceAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='pins {' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDslDeviceAccess().getPinsKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslDeviceAccess().getPinsDslPinParserRuleCall_4_0()); 
	    }
		lv_pins_4_0=ruleDslPin		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslDeviceRule());
	        }
       		add(
       			$current, 
       			"pins",
        		lv_pins_4_0, 
        		"DslPin");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDslDeviceAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslDeviceAccess().getPinsDslPinParserRuleCall_5_1_0()); 
	    }
		lv_pins_6_0=ruleDslPin		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslDeviceRule());
	        }
       		add(
       			$current, 
       			"pins",
        		lv_pins_6_0, 
        		"DslPin");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDslDeviceAccess().getRightCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslDeviceAccess().getPortsDslPortParserRuleCall_7_0()); 
	    }
		lv_ports_8_0=ruleDslPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslDeviceRule());
	        }
       		add(
       			$current, 
       			"ports",
        		lv_ports_8_0, 
        		"DslPort");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDslDeviceAccess().getFunctionsDslFunctionParserRuleCall_8_0()); 
	    }
		lv_functions_9_0=ruleDslFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslDeviceRule());
	        }
       		add(
       			$current, 
       			"functions",
        		lv_functions_9_0, 
        		"DslFunction");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDslDeviceAccess().getPackagesDslPackageParserRuleCall_9_0()); 
	    }
		lv_packages_10_0=ruleDslPackage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslDeviceRule());
	        }
       		add(
       			$current, 
       			"packages",
        		lv_packages_10_0, 
        		"DslPackage");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_11='registers' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDslDeviceAccess().getRegistersKeyword_10_0());
    }
	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDslDeviceAccess().getLeftCurlyBracketKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslDeviceAccess().getRegistersDslRegisterParserRuleCall_10_2_0()); 
	    }
		lv_registers_13_0=ruleDslRegister		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslDeviceRule());
	        }
       		add(
       			$current, 
       			"registers",
        		lv_registers_13_0, 
        		"DslRegister");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDslDeviceAccess().getCommaKeyword_10_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslDeviceAccess().getRegistersDslRegisterParserRuleCall_10_3_1_0()); 
	    }
		lv_registers_15_0=ruleDslRegister		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslDeviceRule());
	        }
       		add(
       			$current, 
       			"registers",
        		lv_registers_15_0, 
        		"DslRegister");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDslDeviceAccess().getRightCurlyBracketKeyword_10_4());
    }
)?	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getDslDeviceAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleDslPort
entryRuleDslPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslPortRule()); }
	 iv_ruleDslPort=ruleDslPort 
	 { $current=$iv_ruleDslPort.current; } 
	 EOF 
;

// Rule DslPort
ruleDslPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='port' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDslPortAccess().getPortKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDslPortAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDslPortAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslPortRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getDslPortAccess().getPinsDslPinCrossReference_2_1_0()); 
	}

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDslPortAccess().getCommaKeyword_2_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslPortRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getDslPortAccess().getPinsDslPinCrossReference_2_2_1_0()); 
	}

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDslPortAccess().getRightCurlyBracketKeyword_2_3());
    }
)?)
;





// Entry rule entryRuleDslPin
entryRuleDslPin returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslPinRule()); }
	 iv_ruleDslPin=ruleDslPin 
	 { $current=$iv_ruleDslPin.current; } 
	 EOF 
;

// Rule DslPin
ruleDslPin returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslPinAccess().getNamePinNameParserRuleCall_0()); 
	    }
		lv_name_0_0=rulePinName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslPinRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"PinName");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleDslRegister
entryRuleDslRegister returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslRegisterRule()); }
	 iv_ruleDslRegister=ruleDslRegister 
	 { $current=$iv_ruleDslRegister.current; } 
	 EOF 
;

// Rule DslRegister
ruleDslRegister returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_address_0_0=RULE_HEX
		{
			newLeafNode(lv_address_0_0, grammarAccess.getDslRegisterAccess().getAddressHEXTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslRegisterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"address",
        		lv_address_0_0, 
        		"HEX");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDslRegisterAccess().getColonKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getDslRegisterAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslRegisterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDslRegisterAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslRegisterAccess().getBitsDslBitParserRuleCall_3_1_0()); 
	    }
		lv_bits_4_0=ruleDslBit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslRegisterRule());
	        }
       		add(
       			$current, 
       			"bits",
        		lv_bits_4_0, 
        		"DslBit");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDslRegisterAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslRegisterAccess().getBitsDslBitParserRuleCall_3_2_1_0()); 
	    }
		lv_bits_6_0=ruleDslBit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslRegisterRule());
	        }
       		add(
       			$current, 
       			"bits",
        		lv_bits_6_0, 
        		"DslBit");
	        afterParserOrEnumRuleCall();
	    }

)
)?)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDslRegisterAccess().getRightCurlyBracketKeyword_3_3());
    }
)?)
;





// Entry rule entryRuleDslBit
entryRuleDslBit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslBitRule()); }
	 iv_ruleDslBit=ruleDslBit 
	 { $current=$iv_ruleDslBit.current; } 
	 EOF 
;

// Rule DslBit
ruleDslBit returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getDslBitAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslBitRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleDslPackage
entryRuleDslPackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslPackageRule()); }
	 iv_ruleDslPackage=ruleDslPackage 
	 { $current=$iv_ruleDslPackage.current; } 
	 EOF 
;

// Rule DslPackage
ruleDslPackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDslPackageAccess().getPackageKeyword_0());
    }
(
(
		lv_names_1_0=RULE_ID
		{
			newLeafNode(lv_names_1_0, grammarAccess.getDslPackageAccess().getNamesIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslPackageRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_1_0, 
        		"ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDslPackageAccess().getCommaKeyword_2_0());
    }
(
(
		lv_names_3_0=RULE_ID
		{
			newLeafNode(lv_names_3_0, grammarAccess.getDslPackageAccess().getNamesIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslPackageRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_3_0, 
        		"ID");
	    }

)
))*	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDslPackageAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslPackageAccess().getPinsDslPackagePinParserRuleCall_4_0()); 
	    }
		lv_pins_5_0=ruleDslPackagePin		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslPackageRule());
	        }
       		add(
       			$current, 
       			"pins",
        		lv_pins_5_0, 
        		"DslPackagePin");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDslPackageAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslPackageAccess().getPinsDslPackagePinParserRuleCall_5_1_0()); 
	    }
		lv_pins_7_0=ruleDslPackagePin		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslPackageRule());
	        }
       		add(
       			$current, 
       			"pins",
        		lv_pins_7_0, 
        		"DslPackagePin");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDslPackageAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleDslPackagePin
entryRuleDslPackagePin returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslPackagePinRule()); }
	 iv_ruleDslPackagePin=ruleDslPackagePin 
	 { $current=$iv_ruleDslPackagePin.current; } 
	 EOF 
;

// Rule DslPackagePin
ruleDslPackagePin returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDslPackagePinAccess().getNamePinNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=rulePinName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslPackagePinRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"PinName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDslPackagePinAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslPackagePinAccess().getPinNoPinNameParserRuleCall_2_0()); 
	    }
		lv_pinNo_2_0=rulePinName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslPackagePinRule());
	        }
       		set(
       			$current, 
       			"pinNo",
        		lv_pinNo_2_0, 
        		"PinName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDslPackagePinAccess().getRightParenthesisKeyword_3());
    }
(	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDslPackagePinAccess().getLeftCurlyBracketKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslPackagePinAccess().getAltNamesPinNameParserRuleCall_4_1_0()); 
	    }
		lv_altNames_5_0=rulePinName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslPackagePinRule());
	        }
       		add(
       			$current, 
       			"altNames",
        		lv_altNames_5_0, 
        		"PinName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDslPackagePinAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslPackagePinAccess().getAltNamesPinNameParserRuleCall_4_2_1_0()); 
	    }
		lv_altNames_7_0=rulePinName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslPackagePinRule());
	        }
       		add(
       			$current, 
       			"altNames",
        		lv_altNames_7_0, 
        		"PinName");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDslPackagePinAccess().getRightCurlyBracketKeyword_4_3());
    }
)?)
;





// Entry rule entryRuleDslPeripheral
entryRuleDslPeripheral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslPeripheralRule()); }
	 iv_ruleDslPeripheral=ruleDslPeripheral 
	 { $current=$iv_ruleDslPeripheral.current; } 
	 EOF 
;

// Rule DslPeripheral
ruleDslPeripheral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='peripheral' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDslPeripheralAccess().getPeripheralKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDslPeripheralAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslPeripheralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='implements' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDslPeripheralAccess().getImplementsKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslPeripheralRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getDslPeripheralAccess().getCompliantDslProtocolCrossReference_3_0()); 
	}

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDslPeripheralAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslPeripheralAccess().getOperationsDslOperationImplParserRuleCall_5_0()); 
	    }
		lv_operations_5_0=ruleDslOperationImpl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslPeripheralRule());
	        }
       		add(
       			$current, 
       			"operations",
        		lv_operations_5_0, 
        		"DslOperationImpl");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDslPeripheralAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleDslOperationImpl
entryRuleDslOperationImpl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslOperationImplRule()); }
	 iv_ruleDslOperationImpl=ruleDslOperationImpl 
	 { $current=$iv_ruleDslOperationImpl.current; } 
	 EOF 
;

// Rule DslOperationImpl
ruleDslOperationImpl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='impl' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDslOperationImplAccess().getImplKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslOperationImplAccess().getRettypeDslTypeParserRuleCall_1_0()); 
	    }
		lv_rettype_1_0=ruleDslType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslOperationImplRule());
	        }
       		set(
       			$current, 
       			"rettype",
        		lv_rettype_1_0, 
        		"DslType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslOperationImplRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getDslOperationImplAccess().getImplOperationDslOperationCrossReference_2_0()); 
	}

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDslOperationImplAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDslOperationImplAccess().getParamsDslTypedParameterParserRuleCall_4_0_0()); 
	    }
		lv_params_4_0=ruleDslTypedParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslOperationImplRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"DslTypedParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDslOperationImplAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslOperationImplAccess().getParamsDslTypedParameterParserRuleCall_4_1_1_0()); 
	    }
		lv_params_6_0=ruleDslTypedParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslOperationImplRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_6_0, 
        		"DslTypedParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDslOperationImplAccess().getRightParenthesisKeyword_5());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDslOperationImplAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslOperationImplAccess().getExpressionDslPeripheralExpressionParserRuleCall_7_0()); 
	    }
		lv_expression_9_0=ruleDslPeripheralExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslOperationImplRule());
	        }
       		add(
       			$current, 
       			"expression",
        		lv_expression_9_0, 
        		"DslPeripheralExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDslOperationImplAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleDslPeripheralExpression
entryRuleDslPeripheralExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslPeripheralExpressionRule()); }
	 iv_ruleDslPeripheralExpression=ruleDslPeripheralExpression 
	 { $current=$iv_ruleDslPeripheralExpression.current; } 
	 EOF 
;

// Rule DslPeripheralExpression
ruleDslPeripheralExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getDslPeripheralExpressionAccess().getDslExpressionParserRuleCall()); 
    }
    this_DslExpression_0=ruleDslExpression
    { 
        $current = $this_DslExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleDslRegisterRead
entryRuleDslRegisterRead returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslRegisterReadRule()); }
	 iv_ruleDslRegisterRead=ruleDslRegisterRead 
	 { $current=$iv_ruleDslRegisterRead.current; } 
	 EOF 
;

// Rule DslRegisterRead
ruleDslRegisterRead returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDslRegisterReadAccess().getRefXBoolTypeParserRuleCall_0_0()); 
	    }
		lv_ref_0_0=ruleXBoolType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslRegisterReadRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_0_0, 
        		"XBoolType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDslRegisterReadAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslRegisterReadAccess().getVarXBoolTypeParserRuleCall_2_0()); 
	    }
		lv_var_2_0=ruleXBoolType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslRegisterReadRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_2_0, 
        		"XBoolType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDslRegisterWrite
entryRuleDslRegisterWrite returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslRegisterWriteRule()); }
	 iv_ruleDslRegisterWrite=ruleDslRegisterWrite 
	 { $current=$iv_ruleDslRegisterWrite.current; } 
	 EOF 
;

// Rule DslRegisterWrite
ruleDslRegisterWrite returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDslRegisterWriteAccess().getRefXBoolTypeParserRuleCall_0_0()); 
	    }
		lv_ref_0_0=ruleXBoolType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslRegisterWriteRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_0_0, 
        		"XBoolType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='<=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDslRegisterWriteAccess().getLessThanSignEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslRegisterWriteAccess().getVarDslValueParserRuleCall_2_0()); 
	    }
		lv_var_2_0=ruleDslValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslRegisterWriteRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_2_0, 
        		"DslValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDslValue
entryRuleDslValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslValueRule()); }
	 iv_ruleDslValue=ruleDslValue 
	 { $current=$iv_ruleDslValue.current; } 
	 EOF 
;

// Rule DslValue
ruleDslValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_HEX_0=RULE_HEX
    { 
    newLeafNode(this_HEX_0, grammarAccess.getDslValueAccess().getHEXTerminalRuleCall_0()); 
    }

    |this_BINARY_1=RULE_BINARY
    { 
    newLeafNode(this_BINARY_1, grammarAccess.getDslValueAccess().getBINARYTerminalRuleCall_1()); 
    }

    |this_INT_2=RULE_INT
    { 
    newLeafNode(this_INT_2, grammarAccess.getDslValueAccess().getINTTerminalRuleCall_2()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getDslValueAccess().getXBoolTypeParserRuleCall_3()); 
    }
    this_XBoolType_3=ruleXBoolType
    { 
        $current = $this_XBoolType_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleDslFunction
entryRuleDslFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslFunctionRule()); }
	 iv_ruleDslFunction=ruleDslFunction 
	 { $current=$iv_ruleDslFunction.current; } 
	 EOF 
;

// Rule DslFunction
ruleDslFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='function' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDslFunctionAccess().getFunctionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslFunctionAccess().getTypeDslTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleDslType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslFunctionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"DslType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getDslFunctionAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslFunctionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDslFunctionAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDslFunctionAccess().getParamsDslTypedParameterParserRuleCall_4_0_0()); 
	    }
		lv_params_4_0=ruleDslTypedParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslFunctionRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"DslTypedParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDslFunctionAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslFunctionAccess().getParamsDslTypedParameterParserRuleCall_4_1_1_0()); 
	    }
		lv_params_6_0=ruleDslTypedParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslFunctionRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_6_0, 
        		"DslTypedParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDslFunctionAccess().getRightParenthesisKeyword_5());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDslFunctionAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslFunctionAccess().getExpressionsDslExpressionParserRuleCall_7_0()); 
	    }
		lv_expressions_9_0=ruleDslExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslFunctionRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_9_0, 
        		"DslExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDslFunctionAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleDslTypedParameter
entryRuleDslTypedParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslTypedParameterRule()); }
	 iv_ruleDslTypedParameter=ruleDslTypedParameter 
	 { $current=$iv_ruleDslTypedParameter.current; } 
	 EOF 
;

// Rule DslTypedParameter
ruleDslTypedParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDslTypedParameterAccess().getParamTypeDslTypeParserRuleCall_0_0()); 
	    }
		lv_paramType_0_0=ruleDslType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslTypedParameterRule());
	        }
       		set(
       			$current, 
       			"paramType",
        		lv_paramType_0_0, 
        		"DslType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDslTypedParameterAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslTypedParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleDslCallFunction
entryRuleDslCallFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslCallFunctionRule()); }
	 iv_ruleDslCallFunction=ruleDslCallFunction 
	 { $current=$iv_ruleDslCallFunction.current; } 
	 EOF 
;

// Rule DslCallFunction
ruleDslCallFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getDslCallFunctionAccess().getVariablesXBoolTypeParserRuleCall_0_0_0()); 
	    }
		lv_variables_0_0=ruleXBoolType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslCallFunctionRule());
	        }
       		set(
       			$current, 
       			"variables",
        		lv_variables_0_0, 
        		"XBoolType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDslCallFunctionAccess().getEqualsSignKeyword_0_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslCallFunctionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDslCallFunctionAccess().getFunctionDslOperationCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDslCallFunctionAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDslCallFunctionAccess().getParamsXConditionalExpressionParserRuleCall_3_0_0()); 
	    }
		lv_params_4_0=ruleXConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslCallFunctionRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"XConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDslCallFunctionAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslCallFunctionAccess().getParamsXConditionalExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_params_6_0=ruleXConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslCallFunctionRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_6_0, 
        		"XConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDslCallFunctionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleDslDefineVariable
entryRuleDslDefineVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslDefineVariableRule()); }
	 iv_ruleDslDefineVariable=ruleDslDefineVariable 
	 { $current=$iv_ruleDslDefineVariable.current; } 
	 EOF 
;

// Rule DslDefineVariable
ruleDslDefineVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='var' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDslDefineVariableAccess().getVarKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDslDefineVariableAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslDefineVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDslDefineVariableAccess().getEqualsSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslDefineVariableAccess().getValXBoolTypeParserRuleCall_2_1_0()); 
	    }
		lv_val_3_0=ruleXBoolType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslDefineVariableRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_3_0, 
        		"XBoolType");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleDslReturn
entryRuleDslReturn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslReturnRule()); }
	 iv_ruleDslReturn=ruleDslReturn 
	 { $current=$iv_ruleDslReturn.current; } 
	 EOF 
;

// Rule DslReturn
ruleDslReturn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='return' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDslReturnAccess().getReturnKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslReturnAccess().getValXBoolTypeParserRuleCall_1_0()); 
	    }
		lv_val_1_0=ruleXBoolType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslReturnRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_1_0, 
        		"XBoolType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDslType
entryRuleDslType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslTypeRule()); }
	 iv_ruleDslType=ruleDslType 
	 { $current=$iv_ruleDslType.current; } 
	 EOF 
;

// Rule DslType
ruleDslType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getDslTypeAccess().getTypeDslCTypeParserRuleCall_0()); 
	    }
		lv_type_0_0=ruleDslCType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDslTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"DslCType");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleDslVariable
entryRuleDslVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslVariableRule()); }
	 iv_ruleDslVariable=ruleDslVariable 
	 { $current=$iv_ruleDslVariable.current; } 
	 EOF 
;

// Rule DslVariable
ruleDslVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDslVariableRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getDslVariableAccess().getVarDslDefineVariableCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleName
entryRuleName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameRule()); } 
	 iv_ruleName=ruleName 
	 { $current=$iv_ruleName.current.getText(); }  
	 EOF 
;

// Rule Name
ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getNameAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getNameAccess().getINTTerminalRuleCall_1()); 
    }

    |    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getNameAccess().getIDTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRulePinName
entryRulePinName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPinNameRule()); } 
	 iv_rulePinName=rulePinName 
	 { $current=$iv_rulePinName.current.getText(); }  
	 EOF 
;

// Rule PinName
rulePinName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getPinNameAccess().getNameParserRuleCall()); 
    }
    this_Name_0=ruleName    {
		$current.merge(this_Name_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRulePackageName
entryRulePackageName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageNameRule()); } 
	 iv_rulePackageName=rulePackageName 
	 { $current=$iv_rulePackageName.current.getText(); }  
	 EOF 
;

// Rule PackageName
rulePackageName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='this' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPackageNameAccess().getThisKeyword_0_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getPackageNameAccess().getIDTerminalRuleCall_0_1()); 
    }
)(
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPackageNameAccess().getSolidusKeyword_1_0()); 
    }
    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    newLeafNode(this_ID_3, grammarAccess.getPackageNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleDslCType
entryRuleDslCType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslCTypeRule()); } 
	 iv_ruleDslCType=ruleDslCType 
	 { $current=$iv_ruleDslCType.current.getText(); }  
	 EOF 
;

// Rule DslCType
ruleDslCType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='int' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDslCTypeAccess().getIntKeyword_0()); 
    }

    |
	kw='char' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDslCTypeAccess().getCharKeyword_1()); 
    }

    |
	kw='byte' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDslCTypeAccess().getByteKeyword_2()); 
    }

    |
	kw='long' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDslCTypeAccess().getLongKeyword_3()); 
    }

    |
	kw='float' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDslCTypeAccess().getFloatKeyword_4()); 
    }

    |
	kw='double' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDslCTypeAccess().getDoubleKeyword_5()); 
    }

    |
	kw='string' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDslCTypeAccess().getStringKeyword_6()); 
    }

    |
	kw='void' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDslCTypeAccess().getVoidKeyword_7()); 
    }

    |
	kw='bool' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDslCTypeAccess().getBoolKeyword_8()); 
    }
)
    ;





// Entry rule entryRuleDslExpression
entryRuleDslExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDslExpressionRule()); }
	 iv_ruleDslExpression=ruleDslExpression 
	 { $current=$iv_ruleDslExpression.current; } 
	 EOF 
;

// Rule DslExpression
ruleDslExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDslExpressionAccess().getXPrimaryExpressionParserRuleCall_0()); 
    }
    this_XPrimaryExpression_0=ruleXPrimaryExpression
    { 
        $current = $this_XPrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDslExpressionAccess().getXBinaryExpressionParserRuleCall_1()); 
    }
    this_XBinaryExpression_1=ruleXBinaryExpression
    { 
        $current = $this_XBinaryExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDslExpressionAccess().getXBlockExpressionParserRuleCall_2()); 
    }
    this_XBlockExpression_2=ruleXBlockExpression
    { 
        $current = $this_XBlockExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDslExpressionAccess().getDslCallFunctionParserRuleCall_3()); 
    }
    this_DslCallFunction_3=ruleDslCallFunction
    { 
        $current = $this_DslCallFunction_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDslExpressionAccess().getDslDefineVariableParserRuleCall_4()); 
    }
    this_DslDefineVariable_4=ruleDslDefineVariable
    { 
        $current = $this_DslDefineVariable_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDslExpressionAccess().getDslReturnParserRuleCall_5()); 
    }
    this_DslReturn_5=ruleDslReturn
    { 
        $current = $this_DslReturn_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDslExpressionAccess().getDslRegisterReadParserRuleCall_6()); 
    }
    this_DslRegisterRead_6=ruleDslRegisterRead
    { 
        $current = $this_DslRegisterRead_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDslExpressionAccess().getDslRegisterWriteParserRuleCall_7()); 
    }
    this_DslRegisterWrite_7=ruleDslRegisterWrite
    { 
        $current = $this_DslRegisterWrite_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXBinaryExpression
entryRuleXBinaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBinaryExpressionRule()); }
	 iv_ruleXBinaryExpression=ruleXBinaryExpression 
	 { $current=$iv_ruleXBinaryExpression.current; } 
	 EOF 
;

// Rule XBinaryExpression
ruleXBinaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXBinaryExpressionAccess().getLeftDslVariableParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleDslVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBinaryExpressionRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"DslVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXBinaryExpressionAccess().getOpXBinaryOperatorParserRuleCall_1_0()); 
	    }
		lv_op_1_0=ruleXBinaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBinaryExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_1_0, 
        		"XBinaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXBinaryExpressionAccess().getRightDslExpressionParserRuleCall_2_0()); 
	    }
		lv_right_2_0=ruleDslExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBinaryExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_2_0, 
        		"DslExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXBinaryOperator
entryRuleXBinaryOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBinaryOperatorRule()); } 
	 iv_ruleXBinaryOperator=ruleXBinaryOperator 
	 { $current=$iv_ruleXBinaryOperator.current.getText(); }  
	 EOF 
;

// Rule XBinaryOperator
ruleXBinaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBinaryOperatorAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBinaryOperatorAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBinaryOperatorAccess().getEqualsSignEqualsSignKeyword_2()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBinaryOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBinaryOperatorAccess().getLessThanSignKeyword_4()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBinaryOperatorAccess().getGreaterThanSignKeyword_5()); 
    }

    |
	kw='<<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBinaryOperatorAccess().getLessThanSignLessThanSignKeyword_6()); 
    }

    |
	kw='>>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBinaryOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_7()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBinaryOperatorAccess().getAsteriskKeyword_8()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBinaryOperatorAccess().getSolidusKeyword_9()); 
    }

    |
	kw='&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBinaryOperatorAccess().getAmpersandKeyword_10()); 
    }

    |
	kw='|' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBinaryOperatorAccess().getVerticalLineKeyword_11()); 
    }
)
    ;





// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBlockExpressionRule()); }
	 iv_ruleXBlockExpression=ruleXBlockExpression 
	 { $current=$iv_ruleXBlockExpression.current; } 
	 EOF 
;

// Rule XBlockExpression
ruleXBlockExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXBlockExpressionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionDslExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleDslExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"DslExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXBlockExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); }
	 iv_ruleXPrimaryExpression=ruleXPrimaryExpression 
	 { $current=$iv_ruleXPrimaryExpression.current; } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_0()); 
    }
    this_XIfExpression_0=ruleXIfExpression
    { 
        $current = $this_XIfExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_1()); 
    }
    this_XWhileExpression_1=ruleXWhileExpression
    { 
        $current = $this_XWhileExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForExpressionParserRuleCall_2()); 
    }
    this_XForExpression_2=ruleXForExpression
    { 
        $current = $this_XForExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_3()); 
    }
    this_XDoWhileExpression_3=ruleXDoWhileExpression
    { 
        $current = $this_XDoWhileExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXConditionalExpression
entryRuleXConditionalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXConditionalExpressionRule()); }
	 iv_ruleXConditionalExpression=ruleXConditionalExpression 
	 { $current=$iv_ruleXConditionalExpression.current; } 
	 EOF 
;

// Rule XConditionalExpression
ruleXConditionalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXConditionalExpressionAccess().getXConditionalUnaryExpressionParserRuleCall_0()); 
    }
    this_XConditionalUnaryExpression_0=ruleXConditionalUnaryExpression
    { 
        $current = $this_XConditionalUnaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXConditionalExpressionAccess().getXConditionalBlockExpressionParserRuleCall_1()); 
    }
    this_XConditionalBlockExpression_1=ruleXConditionalBlockExpression
    { 
        $current = $this_XConditionalBlockExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXConditionalExpressionAccess().getXBoolExpressionParserRuleCall_2()); 
    }
    this_XBoolExpression_2=ruleXBoolExpression
    { 
        $current = $this_XBoolExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXConditionalExpressionAccess().getXBoolTypeParserRuleCall_3()); 
    }
    this_XBoolType_3=ruleXBoolType
    { 
        $current = $this_XBoolType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXConditionalExpressionAccess().getXLiteralParserRuleCall_4()); 
    }
ruleXLiteral
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXConditionalBlockExpression
entryRuleXConditionalBlockExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXConditionalBlockExpressionRule()); }
	 iv_ruleXConditionalBlockExpression=ruleXConditionalBlockExpression 
	 { $current=$iv_ruleXConditionalBlockExpression.current; } 
	 EOF 
;

// Rule XConditionalBlockExpression
ruleXConditionalBlockExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXConditionalBlockExpressionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConditionalBlockExpressionAccess().getExpressionXConditionalExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleXConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConditionalBlockExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"XConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXConditionalBlockExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleXConditionalUnaryExpression
entryRuleXConditionalUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXConditionalUnaryExpressionRule()); }
	 iv_ruleXConditionalUnaryExpression=ruleXConditionalUnaryExpression 
	 { $current=$iv_ruleXConditionalUnaryExpression.current; } 
	 EOF 
;

// Rule XConditionalUnaryExpression
ruleXConditionalUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='!' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXConditionalUnaryExpressionAccess().getExclamationMarkKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConditionalUnaryExpressionAccess().getExpressionXConditionalExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleXConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConditionalUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"XConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXBoolExpression
entryRuleXBoolExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBoolExpressionRule()); }
	 iv_ruleXBoolExpression=ruleXBoolExpression 
	 { $current=$iv_ruleXBoolExpression.current; } 
	 EOF 
;

// Rule XBoolExpression
ruleXBoolExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXBoolExpressionAccess().getLeftXBoolTypeParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleXBoolType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBoolExpressionRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"XBoolType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXBoolExpressionAccess().getOpXBoolOperationParserRuleCall_1_0()); 
	    }
		lv_op_1_0=ruleXBoolOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBoolExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_1_0, 
        		"XBoolOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXBoolExpressionAccess().getRightXConditionalExpressionParserRuleCall_2_0()); 
	    }
		lv_right_2_0=ruleXConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBoolExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_2_0, 
        		"XConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXBoolOperation
entryRuleXBoolOperation returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBoolOperationRule()); } 
	 iv_ruleXBoolOperation=ruleXBoolOperation 
	 { $current=$iv_ruleXBoolOperation.current.getText(); }  
	 EOF 
;

// Rule XBoolOperation
ruleXBoolOperation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBoolOperationAccess().getVerticalLineVerticalLineKeyword_0()); 
    }

    |
	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBoolOperationAccess().getAmpersandAmpersandKeyword_1()); 
    }

    |
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBoolOperationAccess().getEqualsSignEqualsSignKeyword_2()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBoolOperationAccess().getExclamationMarkEqualsSignKeyword_3()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBoolOperationAccess().getGreaterThanSignKeyword_4()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBoolOperationAccess().getLessThanSignKeyword_5()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBoolOperationAccess().getGreaterThanSignEqualsSignKeyword_6()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBoolOperationAccess().getLessThanSignEqualsSignKeyword_7()); 
    }

    |
	kw='&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBoolOperationAccess().getAmpersandKeyword_8()); 
    }

    |
	kw='|' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXBoolOperationAccess().getVerticalLineKeyword_9()); 
    }
)
    ;





// Entry rule entryRuleXBoolType
entryRuleXBoolType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBoolTypeRule()); }
	 iv_ruleXBoolType=ruleXBoolType 
	 { $current=$iv_ruleXBoolType.current; } 
	 EOF 
;

// Rule XBoolType
ruleXBoolType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXBoolTypeAccess().getXBitAccessParserRuleCall_0()); 
    }
    this_XBitAccess_0=ruleXBitAccess
    { 
        $current = $this_XBitAccess_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXBoolTypeAccess().getXRegisterAccessParserRuleCall_1()); 
    }
    this_XRegisterAccess_1=ruleXRegisterAccess
    { 
        $current = $this_XRegisterAccess_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXBoolTypeAccess().getXVariableAccessParserRuleCall_2()); 
    }
    this_XVariableAccess_2=ruleXVariableAccess
    { 
        $current = $this_XVariableAccess_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXBoolTypeAccess().getXParamVariableAccessParserRuleCall_3()); 
    }
    this_XParamVariableAccess_3=ruleXParamVariableAccess
    { 
        $current = $this_XParamVariableAccess_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXLiteral
entryRuleXLiteral returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getXLiteralRule()); } 
	 iv_ruleXLiteral=ruleXLiteral 
	 { $current=$iv_ruleXLiteral.current.getText(); }  
	 EOF 
;

// Rule XLiteral
ruleXLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_BINARY_0=RULE_BINARY    {
		$current.merge(this_BINARY_0);
    }

    { 
    newLeafNode(this_BINARY_0, grammarAccess.getXLiteralAccess().getBINARYTerminalRuleCall_0()); 
    }

    |    this_HEX_1=RULE_HEX    {
		$current.merge(this_HEX_1);
    }

    { 
    newLeafNode(this_HEX_1, grammarAccess.getXLiteralAccess().getHEXTerminalRuleCall_1()); 
    }

    |    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getXLiteralAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleXBitAccess
entryRuleXBitAccess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBitAccessRule()); }
	 iv_ruleXBitAccess=ruleXBitAccess 
	 { $current=$iv_ruleXBitAccess.current; } 
	 EOF 
;

// Rule XBitAccess
ruleXBitAccess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXBitAccessAccess().getNumberSignKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXBitAccessRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXBitAccessAccess().getBitDslBitCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXRegisterAccess
entryRuleXRegisterAccess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXRegisterAccessRule()); }
	 iv_ruleXRegisterAccess=ruleXRegisterAccess 
	 { $current=$iv_ruleXRegisterAccess.current; } 
	 EOF 
;

// Rule XRegisterAccess
ruleXRegisterAccess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='$' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXRegisterAccessAccess().getDollarSignKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRegisterAccessRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getXRegisterAccessAccess().getRegDslRegisterCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleXVariableAccess
entryRuleXVariableAccess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXVariableAccessRule()); }
	 iv_ruleXVariableAccess=ruleXVariableAccess 
	 { $current=$iv_ruleXVariableAccess.current; } 
	 EOF 
;

// Rule XVariableAccess
ruleXVariableAccess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXVariableAccessRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getXVariableAccessAccess().getVarDslDefineVariableCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleXParamVariableAccess
entryRuleXParamVariableAccess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXParamVariableAccessRule()); }
	 iv_ruleXParamVariableAccess=ruleXParamVariableAccess 
	 { $current=$iv_ruleXParamVariableAccess.current; } 
	 EOF 
;

// Rule XParamVariableAccess
ruleXParamVariableAccess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='~' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXParamVariableAccessAccess().getTildeKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXParamVariableAccessRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getXParamVariableAccessAccess().getVarDslTypedParameterCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleXIfExpression
entryRuleXIfExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXIfExpressionRule()); }
	 iv_ruleXIfExpression=ruleXIfExpression 
	 { $current=$iv_ruleXIfExpression.current; } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXIfExpressionAccess().getIfKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXConditionalExpressionParserRuleCall_2_0()); 
	    }
		lv_if_2_0=ruleXConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"if",
        		lv_if_2_0, 
        		"XConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenDslExpressionParserRuleCall_5_0()); 
	    }
		lv_then_5_0=ruleDslExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_5_0, 
        		"DslExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getRightCurlyBracketKeyword_6());
    }
(	otherlv_7='else' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXIfExpressionAccess().getElseKeyword_7_0());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXIfExpressionAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseDslExpressionParserRuleCall_7_2_0()); 
	    }
		lv_else_9_0=ruleDslExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_9_0, 
        		"DslExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXIfExpressionAccess().getRightCurlyBracketKeyword_7_3());
    }
)?)
;





// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXWhileExpressionRule()); }
	 iv_ruleXWhileExpression=ruleXWhileExpression 
	 { $current=$iv_ruleXWhileExpression.current; } 
	 EOF 
;

// Rule XWhileExpression
ruleXWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='while' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXConditionalExpressionParserRuleCall_2_0()); 
	    }
		lv_predicate_2_0=ruleXConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_2_0, 
        		"XConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyDslExpressionParserRuleCall_5_0()); 
	    }
		lv_body_5_0=ruleDslExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"DslExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXWhileExpressionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleXForExpression
entryRuleXForExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXForExpressionRule()); }
	 iv_ruleXForExpression=ruleXForExpression 
	 { $current=$iv_ruleXForExpression.current; } 
	 EOF 
;

// Rule XForExpression
ruleXForExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='for' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXForExpressionAccess().getForKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXForExpressionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForExpressionAccess().getInitDslExpressionParserRuleCall_2_0()); 
	    }
		lv_init_2_0=ruleDslExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForExpressionRule());
	        }
       		set(
       			$current, 
       			"init",
        		lv_init_2_0, 
        		"DslExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXForExpressionAccess().getSemicolonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForExpressionAccess().getPredicateXConditionalExpressionParserRuleCall_4_0()); 
	    }
		lv_predicate_4_0=ruleXConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_4_0, 
        		"XConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXForExpressionAccess().getSemicolonKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForExpressionAccess().getLoopDslExpressionParserRuleCall_6_0()); 
	    }
		lv_loop_6_0=ruleDslExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForExpressionRule());
	        }
       		set(
       			$current, 
       			"loop",
        		lv_loop_6_0, 
        		"DslExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXForExpressionAccess().getRightParenthesisKeyword_7());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXForExpressionAccess().getLeftCurlyBracketKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForExpressionAccess().getBodyDslExpressionParserRuleCall_9_0()); 
	    }
		lv_body_9_0=ruleDslExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_9_0, 
        		"DslExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXForExpressionAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleXDoWhileExpression
entryRuleXDoWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); }
	 iv_ruleXDoWhileExpression=ruleXDoWhileExpression 
	 { $current=$iv_ruleXDoWhileExpression.current; } 
	 EOF 
;

// Rule XDoWhileExpression
ruleXDoWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='do' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyDslExpressionParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleDslExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"DslExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getRightCurlyBracketKeyword_3());
    }
	otherlv_4='while' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_4());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXConditionalExpressionParserRuleCall_6_0()); 
	    }
		lv_predicate_6_0=ruleXConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_6_0, 
        		"XConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_7());
    }
)
;





RULE_HEX : '0x' ('A'..'F'|'0'..'9')+;

RULE_BINARY : '0b' ('0'..'1')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


