module jp.ac.jaist.kslab.sb.marte.merge.generator.ToUmlWorkflow

import org.eclipse.emf.mwe.utils.*

var gatewayModelUri
var umlUri

var gatewayModel = "gateway"
var umlModel = "uml"

Workflow {
	bean = StandaloneSetup {
		scanClassPath = true
		registerGeneratedEPackage = "MARTE.MARTE_DesignModel.HRM.HwProtocol.HwProtocolPackage"
		registerGeneratedEPackage = "MARTE.MARTE_DesignModel.HRM.HwSpecification.HwDatasheet.HwDatasheetPackage"
		registerGeneratedEPackage = "MARTE.MARTE_DesignModel.HRM.HwLogical.HwDevice.HwDevicePackage"
		registerGeneratedEPackage = "MARTE.MARTE_DesignModel.HRM.HwDiagram.HwDiagramPackage"
		registerGeneratedEPackage = "MARTE.MARTE_DesignModel.HRM.HwSpecification.HwRegister.HwRegisterPackage"
		registerGeneratedEPackage = "MARTE.MARTE_DesignModel.HRM.HwSpecification.HwPeripheral.HwPeripheralPackage"
		registerGeneratedEPackage = "MARTE.MARTE_DesignModel.SRM.SW_Brokering.SW_BrokeringPackage"
		registerGeneratedEPackage = "MARTE.MARTE_DesignModel.HRM.HwLogical.HwComputing.HwComputingPackage"
		registerGeneratedEPackage = "MARTE.MARTE_DesignModel.HRM.HwSpecification.HwPackage.HwPackagePackage"
		registerGeneratedEPackage = "MARTE.MARTE_DesignModel.HRM.HwSpecification.HwDeviceFunction.HwDeviceFunctionPackage"
		registerGeneratedEPackage = "blockdiagram.BlockdiagramPackage"
	}
	
	component = Reader{
		uri = gatewayModelUri
		modelSlot = gatewayModel
	}
	
	component = SRMtoUMLTransformer{
		gatewayModel = gatewayModel
		umlModel = umlModel
	}
	
	component = HardwareModelWriter {
		uri = umlUri
		modelSlot = umlModel
	}
}